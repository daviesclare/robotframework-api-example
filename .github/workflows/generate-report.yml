name: generate-report
on: 
  push:
  pull_request:
  schedule:
    - cron: '0 6 * * *'

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Execute tests
      uses: joonvena/robotframework-docker-action@v1.0
    - name: Upload test results
      uses: actions/upload-artifact@v1
      if: always()
      with:
        name: reports
        path: reports
    
  generate_report:
    if: always()
    needs: [test] 
    runs-on: ubuntu-latest
    strategy:
      # You can use PyPy versions in python-version.
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    # You can test your matrix by printing the current Python version
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - uses: actions/checkout@v2
    - name: Download reports
      uses: actions/download-artifact@v1
      with:
        name: reports
    - name: Send report to commit
      uses: joonvena/robotframework-reporter-action@v2.1
      with:
        gh_access_token: ${{ secrets.GITHUB_TOKEN }}
